name: Docker

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:

permissions:
  contents: read
  packages: write   # push to GHCR
  security-events: write

env:
  GO_VERSION: "1.22.x"
  MODULE: "github.com/platformbuilds/telegen"
  GHCR_IMAGE: "ghcr.io/platformbuilds/telegen"

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compose ldflags
        id: ld
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" == v* ]]; then
            VERSION="${GITHUB_REF_NAME}"
          else
            VERSION="v0.0.0-dev"
          fi
          COMMIT="$(git rev-parse --short=12 HEAD)"
          BUILDDATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
      
          echo "LDFLAGS=-X ${MODULE}/internal/version.version=${VERSION} -X ${MODULE}/internal/version.commit=${COMMIT} -X ${MODULE}/internal/version.buildDate=${BUILDDATE}" >> "$GITHUB_OUTPUT"
          echo "VERSION=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            GO_VERSION=1.22
            LDFLAGS=${{ steps.ld.outputs.LDFLAGS }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.GHCR_IMAGE }}:${{ steps.ld.outputs.VERSION }}
            ${{ env.GHCR_IMAGE }}:latest

  trivy-image-scan:
    runs-on: ubuntu-latest
    needs: [build-push]
    steps:
      - name: Trivy scan GHCR image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ghcr.io/platformbuilds/telegen:latest
          format: table
          vuln-type: os,library
          severity: CRITICAL,HIGH,MEDIUM
          ignore-unfixed: true
          exit-code: "0"   # set to "1" to fail on findings
